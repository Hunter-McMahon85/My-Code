# Execution begins at address 0
.pos 0
irmovq stack, %rsp  # Set up stack pointer
call main # Execute main program
halt # Terminate program
# Array of 4 elements
.align 8
array:
    .quad 0x000000000010
    .quad 0x000000000009
    .quad 0x000000000008
    .quad 0x000000000007
    .quad 0x000000000006
    .quad 0x000000000005
    .quad 0x000000000004
    .quad 0x000000000003
    .quad 0x000000000002
    .quad 0x000000000001
main:
    irmovq array,%rdi
    irmovq $10,  %rsi
call swapPairs # swapPairs(array, 10)
    ret
    
swapPairs:
    # alias rsi(n) so its not overwritten
    rrmovq %rsi, %r8
    # put rdi into rsi as second pntr
    rrmovq %rdi, %rsi
    iaddq $8, %rsi
    # &a[0] in rdi, &a[1] in rsi
    LOOP:
        call swap
        #increment ptr
        iaddq $16, %rdi # i+=2
        iaddq $16, %rsi # j+=2
        #decrement cnt, this is not a pointer
        isubq $2, %r8 # n-=2
        #jump
        jg LOOP
        
    ret
    
swap:
    # rdi = xp rsi = yp
    # 
    mrmovq (%rdi), %rcx
    mrmovq (%rsi), %rdx
    rmmovq %rcx, (%rsi)
    rmmovq %rdx, (%rdi)
    ret
# Stack starts here and grows to lower addresses
.pos 0x200
stack: