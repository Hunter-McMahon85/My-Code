No file name given! Running with tictactoe.py.
General usage: python lab8.py <filename>
Integer constants: [3, 1, 1, 0, 0, 2, 1, 1, 2, 0, 5, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1]
Reserved words: ['import', 'from', 'import', 'import', 'class', 'def', 'with', 'with', 'for', 'in', 'None', 'None', 'def', 'return', 'for', 'in', 'def', 'return', 'def', 'return', 'def', 'for', 'in', 'for', 'in', 'if', 'return', 'def', 'None', 'if', 'for', 'if', 'not', 'if', 'for', 'in', 'return', 'True', 'if', 'for', 'in', 'return', 'True', 'if', 'if', 'for', 'in', 'return', 'True', 'if', 'if', 'for', 'in', 'return', 'True', 'return', 'False', 'def', 'return', 'def', 'for', 'if', 'return', 'if', 'else', 'if', 'if', 'return', 'if', 'with', 'if', 'return', 'and', 'for', 'in', 'for', 'in', 'if', 'in', 'if', 'in', 'or', 'or', 'if', 'for', 'in', 'in', 'if', 'for', 'in', 'if', 'if', 'for', 'in', 'if', 'if', 'for', 'in', 'return', 'def', 'True', 'if', 'False', 'if', 'is', 'if', 'return', 'False', 'as', 'and', 'as', 'for', 'in', 'if', 'if', 'return', 'False', 'if', 'else', 'return', 'True', 'if', 'while', 'if']
Identifiers: ['random', 'typing', 'Tuple', 'List', 'copy', 'TicTacToeGame', '__init__', 'self', 'size', 'int', 'Initialize', 'the', 'game', 'board', 'the', 'given', 'size', 'self', '_size', 'size', 'Initialize', 'the', 'board', 'empty', 'cells', 'self', '_board', 'self', '_size', '_', 'range', 'self', '_size', 'Initialize', 'the', 'winner', 'to', 'self', '_winner', 'Initialize', 'the', 'turn', 'to', 'a', 'random', 'player', 'self', '_turn', 'random', 'choice', 'X', 'O', '__str__', 'self', 'Returns', 'a', 'string', 'representation', 'of', 'the', 'board', 'n', 'join', 'join', 'line', 'line', 'self', '_board', 'nPlayer', 's', 'turn', 'format', 'self', '_turn', 'get_current_player', 'self', 'self', '_turn', 'get_winner', 'self', 'self', '_winner', 'get_possible_moves', 'self', 'List', 'Tuple', 'int', 'int', 'Returns', 'a', 'list', 'of', 'possible', 'moves', 'moves', 'row_index', 'range', 'self', '_size', 'col_index', 'range', 'self', '_size', 'self', '_board', 'row_index', 'col_index', 'moves', 'append', 'row_index', 'col_index', 'moves', '__is_winning_move', 'self', 'move', 'Tuple', 'int', 'int', 'player', 'bool', 'Returns', 'true', 'this', 'move', 'would', 'win', 'the', 'game', 'the', 'player', 'player', 'player', 'self', '_turn', 'Make', 'a', 'temporary', 'board', 'copy', 'to', 'check', 'effect', 'of', 'this', 'move', 'new_board', 'copy', 'deepcopy', 'self', '_board', 'my_row', 'my_col', 'move', 'new_board', 'my_row', 'my_col', 'player', 'Check', 'row', 'all', 'new_board', 'my_row', 'col', 'player', 'col', 'range', 'self', '_size', 'Check', 'column', 'all', 'new_board', 'row', 'my_col', 'player', 'row', 'range', 'self', '_size', 'Check', 'diagonals', 'my_row', 'my_col', 'Top', 'left', 'to', 'bottom', 'right', 'all', 'new_board', 'ind', 'ind', 'player', 'ind', 'range', 'self', '_size', 'my_row', 'self', '_size', 'my_col', 'Bottom', 'left', 'to', 'top', 'right', 'all', 'new_board', 'self', '_size', 'ind', 'ind', 'player', 'ind', 'range', 'self', '_size', '__euclidean_dist', 'self', 'first', 'Tuple', 'int', 'int', 'second', 'Tuple', 'int', 'int', 'Returns', 'the', 'Euclidean', 'distance', 'between', 'two', 'points', 'first', 'second', 'first', 'second', 'score_move', 'self', 'move', 'Tuple', 'int', 'int', 'float', 'Give', 'this', 'move', 'a', 'score', 'using', 'some', 'metric', 'goodness', 'my_row', 'my_col', 'move', 'Already', 'taken', 'self', '_board', 'my_row', 'my_col', 'opponent', 'X', 'self', '_turn', 'O', 'O', 'Find', 'out', 'this', 'move', 'would', 'win', 'the', 'game', 'self', '__is_winning_move', 'move', 'float', 'inf', 'positive', 'infinity', 'Check', 'opposite', 'player', 'would', 'win', 'this', 'move', 'self', '__is_winning_move', 'move', 'opponent', 'self', '_size', 'just', 'a', 'large', 'value', 'have', 'a', 'list', 'of', 'the', 'coordinates', 'that', 'have', 'X', 'make', 'a', 'list', 'of', 'the', 'coordinates', 'that', 'have', 'O', 'Sum', 'the', 'euclidean', 'distances', 'between', 'move', 'the', 'coordinates', 'of', 'self', '_turn', 'values', 'my_score', 'i', 'range', 'self', '_size', 'j', 'range', 'self', '_size', 'self', '_board', 'i', 'j', 'self', '_turn', 'my_score', 'self', '__euclidean_dist', 'i', 'j', 'my_row', 'my_col', 'Add', 'something', 'to', 'add', 'value', 'you', 'are', 'an', 'empty', 'row', 'col', 'diag', 'all', 'self', '_board', 'my_row', 'ind', 'ind', 'range', 'self', '_size', 'my_score', 'All', 'ohter', 'cells', 'row', 'are', 'all', 'self', '_board', 'ind', 'my_col', 'ind', 'range', 'self', '_size', 'my_score', 'Diagonal', 'top', 'left', 'to', 'bottom', 'right', 'my_row', 'my_col', 'all', 'self', '_board', 'ind', 'ind', 'ind', 'range', 'self', '_size', 'my_score', 'my_row', 'self', '_size', 'my_col', 'Bottom', 'left', 'to', 'top', 'right', 'all', 'self', '_board', 'self', '_size', 'ind', 'ind', 'ind', 'range', 'self', '_size', 'my_score', 'my_score', 'make_move', 'self', 'Tuple', 'int', 'int', 'Selects', 'a', 'move', 'among', 'all', 'possible', 'moves', 'Returns', 'the', 'game', 'continues', 'game', 'over', 'moves', 'self', 'get_possible_moves', 'moves', 'Game', 'over', 'Use', 'Nico', 's', 'idea', 'to', 'have', 'the', 'scores', 'keys', 'the', 'moves', 'values', 'scores', 'self', 'score_move', 'm', 'm', 'm', 'moves', 'best_move', 'scores', 'max', 'scores', 'keys', 'Make', 'the', 'move', 'self', '_board', 'best_move', 'best_move', 'self', '_turn', 'Check', 'current', 'player', 'won', 'the', 'game', 'max', 'scores', 'keys', 'float', 'inf', 'self', '_winner', 'self', '_turn', 'self', '_turn', 'X', 'self', '_turn', 'O', 'O', '__name__', '__main__', 'game', 'TicTacToeGame', 'print', 'game', 'game', 'make_move', 'print', 'game', 'print', 'game', 'game', 'get_winner', 'print', 'f', 'Player', 'game', 'get_winner', 'wins']
Class names: ['TicTacToeGame']
Method names: ['__init__', '__str__', 'get_current_player', 'get_winner', 'get_possible_moves', '__is_winning_move', '__euclidean_dist', 'score_move', 'make_move']
Conditionals: ["if self._board[row_index][col_index] == '.':", 'if not player:', 'if all(new_board[my_row][col] == player for col in range(self._size)):', 'if all(new_board[row][my_col] == player for row in range(self._size)):', 'if my_row == my_col:', 'if all(new_board[ind][ind] == player for ind in range(self._size)):', 'if my_row == self._size - my_col - 1:', 'if all(new_board[self._size - ind - 1][ind] == player for ind in range(self._size)):', "if self._board[my_row][my_col] != '.':", 'if self.__is_winning_move(move):', 'if self.__is_winning_move(move, opponent):', 'if self._board[i][j] == self._turn:', "if all(self._board[my_row][ind] == '.' for ind in range(self._size)):", "if all(self._board[ind][my_col] == '.' for ind in range(self._size)):", 'if my_row == my_col:', "if all(self._board[ind][ind] == '.' for ind in range(self._size)):", 'if my_row == self._size - my_col - 1:', "if all(self._board[self._size - ind - 1][ind] == '.' for ind in range(self._size)):", 'if moves == []:', "if max(scores.keys()) == float('inf'):", "if __name__ == '__main__':", 'if game.get_winner():']
Program Stats:
Number of integer constants: 27
Number of classes: 1
Number of methods: 9
Number of methods per class: 9.00
Number of conditionals per function: 2.44
Number of identifiers per function: 58.78
Fraction of reserved words used: 0.54
