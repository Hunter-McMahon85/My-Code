Integer constants: [2022, 0, 1, 2, 1, 2, 1, 2, 1, 2, 0, 0, 0, 16, 0, 15, -1, 1, 2, 1, 1, 0, 0, 1]
Reserved words: ['from', 'import', 'from', 'import', 'from', 'import', 'from', 'import', 'from', 'import', 'import', 'class', 'in', 'not', 'in', 'in', 'in', 'and', 'for', 'lambda', 'lambda', 'lambda', 'lambda', 'lambda', 'lambda', 'lambda', 'def', 'with', 'and', 'and', 'try', 'except', 'as', 'return', 'if', 'return', 'elif', 'return', 'else', 'return', 'class', 'is', 'with', 'and', 'def', 'is', 'class', 'and', 'and', 'for', 'not', 'def', 'is', 'False', 'def', 'if', 'if', 'elif', 'elif', 'in', 'elif', 'True', 'else', 'raise', 'in', 'else', 'not', 'def', 'False', 'from', 'True', 'in', 'False', 'while', 'not', 'if']
Identifiers: ['Duck', 'Machine', 'model', 'DM2022W', 'CPU', 'instr_format', 'Instruction', 'OpCode', 'CondFlag', 'decode', 'typing', 'Tuple', 'memory', 'Memory', 'register', 'Register', 'ZeroRegister', 'mvc', 'MVCEvent', 'MVCObservable', 'logging', 'logging', 'basicConfig', 'level', 'logging', 'DEBUG', 'log', 'logging', 'getLogger', '__name__', 'ALU', 'object', 'The', 'arithmetic', 'logic', 'unit', 'also', 'called', 'a', 'functional', 'unit', 'a', 'modern', 'CPU', 'executes', 'a', 'selected', 'function', 'but', 'does', 'otherwise', 'manage', 'CPU', 'state', 'A', 'modern', 'CPU', 'core', 'may', 'have', 'several', 'ALUs', 'to', 'boost', 'performance', 'by', 'performing', 'multiple', 'operatons', 'parallel', 'but', 'the', 'Duck', 'Machine', 'has', 'just', 'one', 'ALU', 'one', 'core', 'The', 'ALU', 'chooses', 'one', 'operation', 'to', 'apply', 'based', 'on', 'a', 'provided', 'operation', 'code', 'These', 'are', 'just', 'simple', 'functions', 'of', 'two', 'arguments', 'hardware', 'we', 'would', 'use', 'a', 'multiplexer', 'circuit', 'to', 'connect', 'the', 'inputs', 'output', 'to', 'the', 'selected', 'circuitry', 'each', 'operation', 'ALU_OPS', 'OpCode', 'ADD', 'x', 'y', 'x', 'y', 'OpCode', 'SUB', 'x', 'y', 'x', 'y', 'OpCode', 'MUL', 'x', 'y', 'x', 'y', 'OpCode', 'DIV', 'x', 'y', 'x', 'y', 'For', 'memory', 'access', 'operations', 'load', 'store', 'the', 'ALU', 'performs', 'the', 'address', 'calculation', 'OpCode', 'LOAD', 'x', 'y', 'x', 'y', 'OpCode', 'STORE', 'x', 'y', 'x', 'y', 'Some', 'operations', 'perform', 'no', 'operation', 'OpCode', 'HALT', 'x', 'y', 'exec', 'self', 'op', 'OpCode', 'in1', 'int', 'in2', 'int', 'Tuple', 'int', 'CondFlag', 'Execute', 'the', 'operation', 'op', 'the', 'arguments', 'in1', 'in2', 'py', 'Args', 'op', 'The', 'operation', 'code', 'in1', 'The', 'first', 'input', 'in2', 'The', 'second', 'input', 'Returns', 'A', 'tuple', 'containing', 'the', 'int', 'result', 'of', 'the', 'operation', 'the', 'condition', 'flag', 'Look', 'up', 'the', 'operation', 'op_func', 'self', 'ALU_OPS', 'op', 'Compute', 'the', 'result', 'result', 'op_func', 'in1', 'in2', 'Exception', 'e', 'CondFlag', 'V', 'result', 'result', 'CondFlag', 'Z', 'result', 'result', 'CondFlag', 'P', 'result', 'CondFlag', 'M', 'CPUStep', 'MVCEvent', 'CPU', 'beginning', 'step', 'PC', 'at', 'a', 'given', 'address', '__init__', 'self', 'subject', 'CPU', 'pc_addr', 'int', 'instr_word', 'int', 'instr', 'Instruction', 'Initialize', 'a', 'CPU', 'step', 'event', 'Args', 'subject', 'The', 'CPU', 'that', 'beginning', 'the', 'step', 'pc_addr', 'The', 'address', 'of', 'the', 'instruction', 'to', 'be', 'executed', 'instr_word', 'The', 'instruction', 'word', 'at', 'the', 'given', 'address', 'instr', 'The', 'decoded', 'instruction', 'self', 'subject', 'subject', 'self', 'pc_addr', 'pc_addr', 'self', 'instr_word', 'instr_word', 'self', 'instr', 'instr', 'CPU', 'MVCObservable', 'Duck', 'Machine', 'central', 'processing', 'unit', 'CPU', 'has', 'registers', 'including', 'r0', 'that', 'always', 'holds', 'zero', 'r15', 'that', 'holds', 'the', 'program', 'counter', 'a', 'few', 'flag', 'registers', 'condition', 'codes', 'halted', 'state', 'some', 'logic', 'sequencing', 'execution', 'The', 'CPU', 'does', 'contain', 'the', 'main', 'memory', 'but', 'has', 'a', 'bus', 'connecting', 'it', 'to', 'a', 'separate', 'memory', '__init__', 'self', 'memory', 'Memory', 'Initialize', 'a', 'CPU', 'object', 'Args', 'memory', 'The', 'memory', 'to', 'connect', 'to', 'the', 'CPU', 'super', '__init__', 'self', 'memory', 'memory', 'Not', 'part', 'of', 'CPU', 'what', 'we', 'really', 'have', 'a', 'connection', 'self', 'registers', 'ZeroRegister', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'Register', 'self', 'condition', 'CondFlag', 'ALWAYS', 'self', 'pc', 'self', 'registers', 'self', 'halted', 'self', 'alu', 'ALU', 'step', 'self', 'Execute', 'one', 'instruction', 'Fetch', 'the', 'instruction', 'word', 'at', 'the', 'program', 'counter', 'instr_addr', 'self', 'pc', 'get', 'instr_word', 'self', 'memory', 'get', 'instr_addr', 'Decode', 'the', 'instruction', 'word', 'instr', 'decode', 'instr_word', 'the', 'Instruction', 'object', 'log', 'debug', 'f', 'Instruction', 'instr', 'self', 'notify_all', 'CPUStep', 'self', 'instr_addr', 'instr_word', 'instr', 'Execute', 'the', 'instruction', 'Check', 'the', 'condition', 'code', 'instr', 'cond', 'self', 'condition', 'log', 'debug', 'f', 'Condition', 'met', 'instr', 'cond', 'opcode', 'instr', 'op', 'target', 'self', 'registers', 'instr', 'reg_target', 'left', 'self', 'registers', 'instr', 'reg_src1', 'get', 'right', 'self', 'registers', 'instr', 'reg_src2', 'get', 'instr', 'offset', 'increment', 'the', 'program', 'counter', 'self', 'pc', 'put', 'self', 'pc', 'get', 'execute', 'the', 'instruction', 'result', 'self', 'condition', 'self', 'alu', 'exec', 'opcode', 'left', 'right', 'instr', 'op', 'OpCode', 'STORE', 'log', 'debug', 'f', 'Store', 'register', 'target', 'get', 'at', 'memory', 'address', 'result', 'self', 'memory', 'put', 'address', 'result', 'value', 'target', 'get', 'instr', 'op', 'OpCode', 'LOAD', 'log', 'debug', 'f', 'Load', 'result', 'into', 'register', 'target', 'get', 'val', 'self', 'memory', 'get', 'result', 'target', 'put', 'val', 'instr', 'op', 'OpCode', 'ADD', 'OpCode', 'SUB', 'OpCode', 'MUL', 'OpCode', 'DIV', 'log', 'debug', 'f', 'Store', 'result', 'into', 'register', 'target', 'get', 'target', 'put', 'result', 'instr', 'op', 'OpCode', 'HALT', 'log', 'debug', 'f', 'Halt', 'self', 'halted', 'ValueError', 'f', 'Unknown', 'opcode', 'instr', 'op', 'instruction', 'instr', 'log', 'debug', 'f', 'Finished', 'processing', 'instruction', 'instr', 'log', 'debug', 'f', 'Condition', 'met', 'skipping', 'instruction', 'instr', 'increment', 'the', 'program', 'counter', 'self', 'pc', 'put', 'self', 'pc', 'get', 'run', 'self', 'from_addr', 'single_step', 'Run', 'the', 'CPU', 'until', 'it', 'halts', 'Args', 'from_addr', 'The', 'address', 'to', 'start', 'execution', 'single_step', 'If', 'run', 'the', 'CPU', 'single', 'step', 'mode', 'self', 'halted', 'self', 'pc', 'put', 'from_addr', 'step_count', 'self', 'halted', 'single_step', 'input', 'Step', 'press', 'enter', 'format', 'step_count', 'self', 'step', 'step_count']
Class names: ['ALU', 'CPUStep', 'CPU']
Method names: ['exec', '__init__', 'step', 'run']
Conditionals: ['if result == 0:', 'elif result > 0:', 'else:', 'if instr.cond & self.condition:', 'if instr.op == OpCode.STORE:', 'elif instr.op == OpCode.LOAD:', 'elif instr.op in [OpCode.ADD, OpCode.SUB, OpCode.MUL, OpCode.DIV]:', 'elif instr.op == OpCode.HALT:', 'else:', 'else:', 'if single_step:']
Program Stats:
Number of integer constants: 24
Number of classes: 3
Number of methods: 4
Number of methods per class: 1.33
Number of conditionals per function: 2.75
Number of identifiers per function: 173.00
Fraction of reserved words used: 0.63
